{"ast":null,"code":"import { of } from 'rxjs';\nimport { HEROES } from './mock-heroes';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./message.service\";\nexport class HeroService {\n  constructor(http, messageService) {\n    this.http = http;\n    this.messageService = messageService;\n    this.heroesUrl = 'api/heroes'; // URL to web api\n  }\n  /** GET heroes from the server */\n  getHeroes() {\n    return this.http.get(this.heroesUrl);\n  }\n  getHero(id) {\n    // For now, assume that a hero with the specified `id` always exists.\n    // Error handling will be added in the next step of the tutorial.\n    const hero = HEROES.find(h => h.id === id);\n    this.messageService.add(`HeroService: fetched hero id=${id}`);\n    return of(hero);\n  }\n  /** Log a HeroService message with the MessageService */\n  log(message) {\n    this.messageService.add(`HeroService: ${message}`);\n  }\n}\nHeroService.ɵfac = function HeroService_Factory(t) {\n  return new (t || HeroService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.MessageService));\n};\nHeroService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HeroService,\n  factory: HeroService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,EAAE,QAAQ,MAAM;AAGrC,SAASC,MAAM,QAAQ,eAAe;;;;AAItC,OAAM,MAAOC,WAAW;EAEtBC,YACUC,IAAgB,EAChBC,cAA8B;IAD9B,SAAI,GAAJD,IAAI;IACJ,mBAAc,GAAdC,cAAc;IAmBhB,cAAS,GAAG,YAAY,CAAC,CAAE;EAnBS;EAE5C;EACFC,SAAS;IACP,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAS,IAAI,CAACC,SAAS,CAAC;EAC9C;EAEEC,OAAO,CAACC,EAAU;IAChB;IACA;IACA,MAAMC,IAAI,GAAGV,MAAM,CAACW,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACH,EAAE,KAAKA,EAAE,CAAE;IAC3C,IAAI,CAACL,cAAc,CAACS,GAAG,CAAC,gCAAgCJ,EAAE,EAAE,CAAC;IAC7D,OAAOV,EAAE,CAACW,IAAI,CAAC;EACjB;EAEA;EACQI,GAAG,CAACC,OAAe;IACzB,IAAI,CAACX,cAAc,CAACS,GAAG,CAAC,gBAAgBE,OAAO,EAAE,CAAC;EACpD;;AAtBWd,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAe,SAAXf,WAAW;EAAAgB,YADE;AAAM","names":["of","HEROES","HeroService","constructor","http","messageService","getHeroes","get","heroesUrl","getHero","id","hero","find","h","add","log","message","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Alexandre Müller\\tour-of-heroes\\src\\app\\hero.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { Observable, of } from 'rxjs';\n\nimport { Hero } from './hero';\nimport { HEROES } from './mock-heroes';\nimport { MessageService } from './message.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n@Injectable({ providedIn: 'root' })\nexport class HeroService {\n\n  constructor(\n    private http: HttpClient,\n    private messageService: MessageService) { }\n\n  /** GET heroes from the server */\ngetHeroes(): Observable<Hero[]> {\n  return this.http.get<Hero[]>(this.heroesUrl)\n}\n\n  getHero(id: number): Observable<Hero> {\n    // For now, assume that a hero with the specified `id` always exists.\n    // Error handling will be added in the next step of the tutorial.\n    const hero = HEROES.find(h => h.id === id)!;\n    this.messageService.add(`HeroService: fetched hero id=${id}`);\n    return of(hero);\n  }\n\n  /** Log a HeroService message with the MessageService */\n  private log(message: string) {\n    this.messageService.add(`HeroService: ${message}`);\n  }\n  private heroesUrl = 'api/heroes';  // URL to web api\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}